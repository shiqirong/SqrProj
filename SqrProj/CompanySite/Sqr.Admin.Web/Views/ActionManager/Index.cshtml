
@{
    Layout = "_Layout";
    ViewData["Title"] = "Index";
}

<script type="text/html" id="toolbar">
    <div class="layui-btn-container">
        <button id="add" onclick="openAdd();" class="layui-btn layui-btn-sm"  lay-event="add"><i class="layui-icon">&#xe608;</i>添加</button>
        <button id="btn-expand" onclick="openAllTreeNodes();" class="layui-btn layui-btn-sm" lay-event="expand">全部展开</button>
        <button id="btn-fold" onclick="closeAllTreeNodes();"  class="layui-btn layui-btn-sm" lay-event="fold">全部折叠</button>
    </div>
</script>

<div class="xm">
    <div class="xm-d2">

        <div class="xm-d2-hang2">
            <table id="permissionTable" class="layui-table" lay-filter="permissionTable"></table>
        </div>
    </div>

</div>


@section Scripts{
    <script type="text/javascript">
        var renderTable = null;
        /*使用模块加载的方式 加载文件*/
        layui.config({
            base: '/lib/layui/lay/modules/'
        }).extend({
            treetable: 'treetable-lay/treetable'
        }).use(['layer', 'table', 'treetable'], function () {
            var $ = layui.jquery;
            var table = layui.table;
            var layer = layui.layer;
            var treetable = layui.treetable;

            // 渲染表格
            renderTable = function () {//树桩表格参考文档：https://gitee.com/whvse/treetable-lay
                layer.load(2);
                treetable.render({
                    treeColIndex: 1,//树形图标显示在第几列
                    treeSpid: 0,//最上级的父级id
                    treeIdName: 'id',//id字段的名称
                    toolbar: '#toolbar', //开启头部工具栏，并为其绑定左侧模板
                    treePidName: 'parentId',//pid字段的名称
                    treeDefaultClose: false,//是否默认折叠
                    treeLinkage: true,//父级展开时是否自动展开所有子级
                    elem: '#permissionTable',
                    url: 'MenuList',
                    page: false,
                    cols: [[
                        { type: 'numbers', title: '编号' },
                        { field: 'name', title: '菜单名称' },
                        { field: 'systemName', title: '系統名称' },
                       
                        { field: 'controller', title: 'Controller' },
                        { field: 'action', title: 'Action' },
                        {
                            field: 'category', title: '类型',
                            templet: function (d) {
                                if (d.resType == 1) {
                                    return '菜单';
                                } else if (d.resType == 2) {
                                    return '功能';
                                }
                                else
                                    return '菜單和功能';
                            }
                        },
                        { templet: complain, title: '操作' }
                    ]],
                    done: function () {
                        layer.closeAll('loading');
                    }
                });
            };

            renderTable();

            function complain(d) {//操作中显示的内容
                if (d != null) {
                    return [
                        '<a class="operation" lay-event="edit" href="javascript:void(0)" onclick="openEdit(\'' + d.id + '\')" title="编辑">',
                        '<i class="layui-icon layui-icon-edit"></i></a>',
                        '<a class="operation" lay-event="" href="javascript:void(0)" onclick="del(\'' + d.id + '\')" title="删除">',
                        '<i class="layui-icon layui-icon-delete" ></i></a>',
                    ].join('');
                } else {
                    return '';
                }

            }
        });

        function openAllTreeNodes() {
            layui.treetable.expandAll('#permissionTable');
        }

        function closeAllTreeNodes() {
            layui.treetable.foldAll('#permissionTable');
        }

        var editHandler ;
        function openEdit(id) {
            editHandler=layer.open({
                type: 2,
                area: ['700px', '550px'],
                fixed: false, //不固定
                maxmin: true,
                content: 'Edit?id=' + id,
                title:"修改菜单"
            });
        }

        function closeEdit() {
            layer.close(editHandler);
            renderTable();
        }

        var addHandler;
        function openAdd(id) {
            addHandler = layer.open({
                type: 2,
                area: ['700px', '550px'],
                fixed: false, //不固定
                maxmin: true,
                content: 'Add',
                title: "添加菜單"
            });
        }

        function closeAdd() {
            layer.close(addHandler);
            renderTable();
        }

        function del(id) {
             layer.confirm('确定要删除菜单及其下所有的子菜单?', function (index) {
                 $.ajax({
                     url: 'delete',
                     method: 'post',
                     data: { "id": id },
                     dataType: 'JSON',
                     success: function (res) {
                         if (res.code = '0') {
                             renderTable();
                         }
                         else
                             alert(res.msg);
                     },
                     error: function (err) {
                         alert(err);
                     },
                     complete: function () {
                         layer.close(index);
                     }
                 });
            }); 
            
        }
    </script>
}


