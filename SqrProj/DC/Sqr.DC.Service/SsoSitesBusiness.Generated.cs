//-----------------------------------------------------------------------
// <copyright file=" SsoSitesBusiness.Generated.cs" company="xxxx Enterprises">
// * Copyright (C) 2018 xxxx Enterprises All Rights Reserved
// * version : 4.0.30319.42000
// * author  : auto generated by T4
// * FileName: SsoSitesBusiness.cs
// * history : Created by T4 10/13/2018 17:38:57 
// </copyright>
//-----------------------------------------------------------------------
using Sqr.Common;
using Sqr.Common.Paging;
using Sqr.DC.BLL.Security.DTO;
using Sqr.DC.Entities;
using Sqr.DC.Repositories;
using System.Collections.Generic;
using Sqr.Common.IOC;
using System.Transactions;

namespace Sqr.DC.Services
{
    /// <summary>
    /// sso_sites Respository
    /// </summary>   
    public partial class SsoSitesBusiness :BaseService
    {
		
        //public PagingOutput<SsoSites> GetPageList(PagingInput input)
        //{
        //    return AutofacConfig.Resolve<SsoSitesRepository>().(
        //        input.PageIndex,
        //        input.PageSize,
        //        null,
        //        a => a.CreateTime,
        //        true
        //    );
        //}

        public List<SsoSites> GeList()
        {
            return AutofacConfig.Resolve<SsoSitesRepository>().GetMany(null);
        }

        public SsoSites GetById(long id)
        {
            return AutofacConfig.Resolve<SsoSitesRepository>().GetById(id);
        }

        public long Add(SsoSites model)
        {
            model.Id = IdHelper.GetNewId();
            if (AutofacConfig.Resolve<SsoSitesRepository>().Insert(model) > 0)
                return model.Id;
            return 0;
        }

        public bool Add(List<SsoSites> models)
        {
            models.ForEach(c => c.Id = IdHelper.GetNewId());
            var rep = AutofacConfig.Resolve<SsoSitesRepository>();
            using (System.Transactions.TransactionScope ts = new System.Transactions.TransactionScope())
            {
                foreach(var m in models)
                {
                    rep.Insert(m);
                }
                ts.Complete();
            }
            return true;
        }

        public bool Update(SsoSites model)
        {
            return AutofacConfig.Resolve<SsoSitesRepository>().Update(model)>0;
        }

        public int Update(List<SsoSites> models)
        {
            return AutofacConfig.Resolve<SsoSitesRepository>().Update(models) ;
        }
	}
}
